@{
    ViewData["Title"] = "Products Overview";
}

@model ProductAdminListViewModel

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="page-header">
                <h1 class="text-white text-center">
                    Admin Dashboard
                </h1>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <div id="sidebar">
                            <header>
                                <a class="nav-link" asp-controller="Home" asp-action="AdminPage">Admin Home</a>
                            </header>
                            <ul class="nav">
                                <li>
                                    <a class="nav-link" asp-controller="Home" asp-action="ListProducts">View Products</a>
                                </li>
                                <li>
                                    <a class="nav-link" asp-controller="Home" asp-action="ListCustomers">View Customers</a>
                                </li>
                                <li>
                                    <a class="nav-link" asp-controller="Home" asp-action="ListOrders">Review Fraudulent Orders</a>
                                </li>
                            </ul>
                        </div>
        </div>
        <div class="col-md-10">
           <a class="btn btn-primary" asp-controller="Home" asp-action="AddProduct">Add Product</a> <br /><br />
           
           <div class="row gx-4 gx-lg-5 row-cols-1 row-cols-md-2 row-cols-xl-3 justify-content-center">
               @foreach (var product in Model.Products)
               {
                   <partial name="ProductOverviewCard" model="product" />
               }
           </div>
        </div>
    </div>
</div>




<div page-model="@Model.PaginationInfo" page-action="ListProducts">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @{
                int totalPages = Model.PaginationInfo.TotalPages;
                int currentPage = Model.PaginationInfo.CurrentPage;
                int maxVisiblePages = 5; // Adjust this value to change the maximum number of visible page links
                int startPage = Math.Max(1, currentPage - maxVisiblePages / 2);
                int endPage = Math.Min(startPage + maxVisiblePages - 1, totalPages);
                startPage = Math.Max(1, endPage - maxVisiblePages + 1);
            }
            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="#" onclick="gotoPage(1)">1</a>
                </li>
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="#" onclick="gotoPage(@i)">@i</a>
                </li>
            }
            @if (endPage < totalPages)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#" onclick="gotoPage(@totalPages)">@totalPages</a>
                </li>
            }
        </ul>
    </nav>
</div>

